#include<bits/stdc++.h>
using namespace std;
const int INF = 1e9 + 7;
const int MAX = 1e5 + 5;
#define sel ios_base::sync_with_stdio(false);cin.tie(NULL);
#define int long long int
#define pb push_back

const int p = 3;
const int q = 4;

vector<int> graph[MAX];
bool vis[MAX] = {0};

int ans[MAX] = {0};

void dfs(int v, int count)
{
	vis[v] = 1;
	
	ans[v] += count;
	
	//if(count % 2 == 0)
    //cout << p << " ";
    //else
    //cout << q << " ";
    
	for (auto x : graph[v]) {
 
		if (vis[x] == 0)
		{
			dfs(x, count + 1);
		}
		else
		continue;
	}
}

void solve()
{
    int n;
    cin>>n;
    int k = n - 1;
    int s = k;
    while(k--)
    {
        int u,v; 
        cin >> u >> v;
        graph[u].pb(v);
        graph[v].pb(u);
    }
    
    int count = 0;
    dfs(1,count);
    
    for(int i=1;i <= n;i++)
    {
        if(ans[i]%2 == 0)
        cout << p << " ";
        else
        cout << q << " ";
    }
    
    for(int i = 0;i<MAX;i++)
    vis[i]=0;
    for(int i = 0;i<MAX;i++)
    ans[i]=0;
    for(int i = 0;i<MAX;i++)
    {
        graph[i].clear();
    }
    
    cout << "\n";
    
    
}

int32_t main(void)
{
    sel
    int t=1;
    cin>>t;
    while(t--)
    {
        solve();
    }
    return 0;
}
