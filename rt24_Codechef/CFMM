#include<bits/stdc++.h>
using namespace std;
const int M = 1e9 + 7;
#define fastio ios_base::sync_with_stdio(false);cin.tie(NULL);
#define int unsigned long long int
#define pb push_back
#define mp make_pair

/*int gcd(int a, int b) 
{ 
    if (a == 0) 
        return b; 
    return gcd(b % a, a); 
} 

int powermod(int A, int p, int MOD = mod){
    A%=MOD;
    int res  = 1;
    while(p){
        if(p&1)
            res = ((__int128)res*A)%MOD;
        
        A = ((__int128)A*A)%MOD;
        p>>=1;
    }

    return res;
}*/

int32_t main(void)
{
    fastio
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        vector<pair<char,int>> v;
        int cc=0,co=0,cd=0,ce=0,ch=0,cf=0;
        while(n--)
        {
            string x;
            cin>>x;
            for(int i=0;i<x.size();i++)
            {
                if(x[i]=='c')
                cc++;
            }
            for(int i=0;i<x.size();i++)
            {
                if(x[i]=='o')
                co++;
            }
            for(int i=0;i<x.size();i++)
            {
                if(x[i]=='d')
                cd++;
            }
            for(int i=0;i<x.size();i++)
            {
                if(x[i]=='e')
                ce++;
            }
            for(int i=0;i<x.size();i++)
            {
                if(x[i]=='h')
                ch++;
            }
            for(int i=0;i<x.size();i++)
            {
                if(x[i]=='f')
                cf++;
            }
            
        }
        
        v.pb(mp('c',cc));
        v.pb(mp('o',co));
        v.pb(mp('d',cd));
        v.pb(mp('e',ce));
        v.pb(mp('h',ch));
        v.pb(mp('f',cf));
        
        int min_1=INT_MAX;
        for(int i=0;i<v.size();i++)
        {
            if(v[i].first=='c'||v[i].first=='e')
            min_1=min((v[i].second)/2,min_1);
            else
            min_1=min((v[i].second),min_1);
        }
        //int *min_1=min_element(v.begin(),v.end());
        cout<<min_1<<"\n";
    }
    return 0;
}
